apiVersion: apps/v1
data:
  spec:
    template:
      $patch: replace
      metadata:
        creationTimestamp: null
        labels:
          app: wb1
          notebook-name: wb1
          opendatahub.io/dashboard: "true"
          opendatahub.io/odh-managed: "true"
          opendatahub.io/user: developer
          opendatahub.io/workbenches: "true"
          statefulset: wb1
      spec:
        affinity: {}
        containers:
        - env:
          - name: NOTEBOOK_ARGS
            value: |-
              --ServerApp.port=8888
                                --ServerApp.token=''
                                --ServerApp.password=''
                                --ServerApp.base_url=/notebook/developer/wb1
                                --ServerApp.quit_button=False
                                --ServerApp.tornado_settings={"user":"developer","hub_host":"https://rhods-dashboard-redhat-ods-applications.apps-crc.testing","hub_prefix":"/projects/developer"}
          - name: JUPYTER_IMAGE
            value: image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/s2i-minimal-notebook:2024.1
          - name: PIPELINES_SSL_SA_CERTS
            value: /etc/pki/tls/custom-certs/ca-bundle.crt
          - name: GIT_SSL_CAINFO
            value: /etc/pki/tls/custom-certs/ca-bundle.crt
          - name: PIP_CERT
            value: /etc/pki/tls/custom-certs/ca-bundle.crt
          - name: REQUESTS_CA_BUNDLE
            value: /etc/pki/tls/custom-certs/ca-bundle.crt
          - name: SSL_CERT_FILE
            value: /etc/pki/tls/custom-certs/ca-bundle.crt
          - name: NB_PREFIX
            value: /notebook/developer/wb1
          envFrom:
          - secretRef:
              name: aws-connection-s3
          image: image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/s2i-minimal-notebook:2024.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /notebook/developer/wb1/api
              port: notebook-port
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: wb1
          ports:
          - containerPort: 8888
            name: notebook-port
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /notebook/developer/wb1/api
              port: notebook-port
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 8Gi
            requests:
              cpu: "1"
              memory: 8Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: wb1
          - mountPath: /dev/shm
            name: shm
          - mountPath: /etc/pki/tls/custom-certs/ca-bundle.crt
            name: trusted-ca
            readOnly: true
            subPath: ca-bundle.crt
          workingDir: /opt/app-root/src
        - args:
          - --provider=openshift
          - --https-address=:8443
          - --http-address=
          - --openshift-service-account=wb1
          - --cookie-secret-file=/etc/oauth/config/cookie_secret
          - --cookie-expire=24h0m0s
          - --tls-cert=/etc/tls/private/tls.crt
          - --tls-key=/etc/tls/private/tls.key
          - --upstream=http://localhost:8888
          - --upstream-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --email-domain=*
          - --skip-provider-button
          - --openshift-sar={"verb":"get","resource":"notebooks","resourceAPIGroup":"kubeflow.org","resourceName":"wb1","namespace":"$(NAMESPACE)"}
          - --logout-url=https://rhods-dashboard-redhat-ods-applications.apps-crc.testing/projects/developer?notebookLogout=wb1
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.redhat.io/openshift4/ose-oauth-proxy@sha256:4bef31eb993feb6f1096b51b4876c65a6fb1f4401fee97fa4f4542b6b7c9bc46
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /oauth/healthz
              port: oauth-proxy
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: oauth-proxy
          ports:
          - containerPort: 8443
            name: oauth-proxy
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /oauth/healthz
              port: oauth-proxy
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/oauth/config
            name: oauth-config
          - mountPath: /etc/tls/private
            name: tls-certificates
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: wb1
        serviceAccountName: wb1
        terminationGracePeriodSeconds: 30
        volumes:
        - name: wb1
          persistentVolumeClaim:
            claimName: wb1
        - emptyDir:
            medium: Memory
          name: shm
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: ca-bundle.crt
            name: workbench-trusted-ca-bundle
            optional: true
          name: trusted-ca
        - name: oauth-config
          secret:
            defaultMode: 420
            secretName: wb1-oauth-config
        - name: tls-certificates
          secret:
            defaultMode: 420
            secretName: wb1-tls
kind: ControllerRevision
metadata:
  creationTimestamp: "2024-10-20T17:05:55Z"
  labels:
    app: wb1
    controller.kubernetes.io/hash: 7d5498444b
    notebook-name: wb1
    opendatahub.io/dashboard: "true"
    opendatahub.io/odh-managed: "true"
    opendatahub.io/user: developer
    opendatahub.io/workbenches: "true"
    statefulset: wb1
  name: wb1-7d5498444b
  namespace: developer
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: wb1
    uid: 6dbaa329-8d91-410a-8fd3-6eeeeef0f436
  resourceVersion: "7173722"
  uid: c6fcee6f-c7d9-42cd-b29d-fa73861054b0
revision: 1
